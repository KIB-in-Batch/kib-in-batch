name: CI/CD
permissions:
  contents: read
  checks: write

on: [push, pull_request]

jobs:
  build-and-deploy:
    runs-on: windows-2025
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup log collection from the start
      - name: Initialize log collection
        shell: powershell
        run: |
          # Create a timestamp for unique log files
          $timestamp = Get-Date -Format "yyyyMMdd-HHmmss"
          New-Item -ItemType Directory -Path "ci_logs" -Force
          echo "CI run started at $timestamp" | Out-File -FilePath "ci_logs\session_$timestamp.log"

      # Install KiB
      - name: Install and validate KiB
        shell: powershell
        run: |
          echo 1 | src\kali_in_batch.bat automated
          Get-Content "$env:APPDATA\kali_in_batch\errors.log" | Out-File -FilePath "ci_logs\install_$timestamp.log" -Append
          if ($LASTEXITCODE -ne 0) { throw "Installation failed" }

      # Test package manager
      - name: Test kib-pkg.bat
        shell: powershell
        run: |
          $kaliPath = "$env:USERPROFILE\kali\usr\bin"
          & "$kaliPath\kib-pkg.bat" update
          & "$kaliPath\kib-pkg.bat" install hello-world
          & "$kaliPath\kib-pkg.bat" list
          & "$kaliPath\kib-pkg.bat" remove hello-world
          & "$kaliPath\kib-pkg.bat" install bat
          & "$kaliPath\bat.exe" --help
          & "$kaliPath\bat.exe" "$env:USERPROFILE\kali\etc\.kibenv"
          & "$kaliPath\kib-pkg.bat" list
          & "$kaliPath\kib-pkg.bat" remove bat
          & "$kaliPath\kib-pkg.bat" install make
          make --version
          make --help
          & "$kaliPath\kib-pkg.bat" remove make
          & "$kaliPath\kib-pkg.bat" list
          Get-Content "$env:APPDATA\kali_in_batch\errors.log" | Out-File -FilePath "ci_logs\packages_$timestamp.log" -Append
          if ($LASTEXITCODE -ne 0) { throw "Package manager failed" }

      # Test BusyBox
      - name: Test BusyBox
        shell: powershell
        run: |
          & "$env:USERPROFILE\kali\usr\bin\busybox.exe" --help
          Get-Content "$env:APPDATA\kali_in_batch\errors.log" | Out-File -FilePath "ci_logs\busybox_$timestamp.log" -Append
          if ($LASTEXITCODE -ne 0) { throw "BusyBox test failed" }
      
      - name: Test other tools
        shell: powershell
        run: |
          & "$env:USERPROFILE\kali\usr\bin\bash.exe" -c "echo 'Hello world!'"
          if ($LASTEXITCODE -ne 0) { throw "Other tools test failed" }
          & "$env:USERPROFILE\kali\usr\bin\sh.exe" -c "echo 'Hello world!'"
          if ($LASTEXITCODE -ne 0) { throw "Other tools test failed" }
          & "$env:USERPROFILE\kali\usr\bin\lsb_release.bat" --help
          if ($LASTEXITCODE -ne 0) { throw "Other tools test failed" }
          & "$env:USERPROFILE\kali\usr\bin\uname.bat" -a
          if ($LASTEXITCODE -ne 0) { throw "Other tools test failed" }
          & "$env:USERPROFILE\kali\usr\bin\whoami.bat"
          if ($LASTEXITCODE -ne 0) { throw "Other tools test failed" }
          & "$env:USERPROFILE\kali\usr\bin\which.bat" cmd -a
          if ($LASTEXITCODE -ne 0) { throw "Other tools test failed" }
          & "$env:USERPROFILE\kali\usr\bin\touch.bat" test.txt
          if ($LASTEXITCODE -ne 0) { throw "Other tools test failed" }
          & "$env:USERPROFILE\kali\usr\bin\rm.exe" -rf test.txt
          if ($LASTEXITCODE -ne 0) { throw "Other tools test failed" }
          & "$env:USERPROFILE\kali\usr\bin\kibfetch.bat"
          if ($LASTEXITCODE -ne 0) { throw "Other tools test failed" }
          Get-Content "$env:APPDATA\kali_in_batch\errors.log" | Out-File -FilePath "ci_logs\other_tools_$timestamp.log" -Append

      # Always upload logs
      - name: Upload all logs
        uses: actions/upload-artifact@v4
        with:
          name: kib-ci-logs-${{ github.run_id }}
          path: ci_logs/*
