name: Ollama Reply

on:
  issue_comment:
    types: [created, edited]

permissions:
  issues: write
  pull-requests: write
  contents: read

jobs:
  ollama-reply:
    if: contains(github.event.comment.body, '@ollama-comment')
    runs-on: ubuntu-latest
    steps:
      - name: Install Ollama
        run: |
          curl -fsSL https://ollama.com/install.sh | sh

      - name: Start Ollama service and pull model
        run: |
          ollama serve &
          sleep 4
          ollama pull llama3.2:3b

      - name: Generate reply with Ollama
        id: generate-reply
      - env:
          USER_COMMENT: ${{ github.event.comment.body }}
        run: |

          PROMPT=$(cat <<EOF
          You are Ollama bot. A GitHub issue/PR comment mentioned you:

          "${USER_COMMENT}"

          Reply helpfully and concisely in markdown. If the comment asks for more context, ask for the minimum required info. Limit length to ~200-300 words.
          EOF
          )

          # Run Ollama and write the result to a file
          REPLY=$(ollama run llama3.2:3b "$PROMPT")
          echo "$REPLY" > reply.txt
          echo "Generated reply:"
          echo "$REPLY"

      - name: Authenticate GitHub App
        id: auth
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Post threaded reply
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.auth.outputs.token }}
          script: |
            const fs = require('fs');
            const reply = fs.readFileSync('reply.txt', 'utf8').trim();
            const targetCommentId = context.payload.comment.id;

            const fullReply = `## ðŸ¤– Ollama Bot Reply

            ${reply}

            ---
            *This reply was generated by Ollama running in GitHub Actions*`;

            // Create a threaded reply (in_reply_to is supported here in the github-script context)
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: fullReply,
              in_reply_to: targetCommentId
            });

      - name: Cleanup
        if: always()
        run: |
          pkill -f ollama || true
          rm -f reply.txt
